# Stato backend autenticazione – Aggiornamento

## Stato attuale
- Repository/DAO per users, refresh_tokens, audit_logs
- Utility di sicurezza: hashing password (bcrypt), JWT RS256, MFA (TOTP)
- Middleware di autenticazione JWT
- Endpoint REST implementati:
  - POST /api/auth/login
  - POST /api/auth/refresh
  - GET /api/auth/userinfo
  - POST /api/auth/mfa/verify
  - POST /api/auth/logout
  - POST /api/auth/log
- Logging azioni di autenticazione (audit log)
- Risposte e gestione errori in JSON

## Struttura directory principale

src/
├── app.ts
├── models/
│   ├── User.ts
│   ├── RefreshToken.ts
│   └── AuditLog.ts
├── repositories/
│   ├── userRepository.ts
│   ├── refreshTokenRepository.ts
│   └── auditLogRepository.ts
├── utils/
│   ├── password.ts
│   ├── jwt.ts
│   └── mfa.ts
├── middleware/
│   └── authMiddleware.ts
├── controllers/
│   └── authController.ts
└── routes/
    └── auth.ts

## Payload di esempio

### Login
POST /api/auth/login
Input:
{ "email": "utente@dominio.it", "password": "...", "mfaCode": "123456" }
Output:
{ "accessToken": "...", "refreshToken": "...", "user": { "id": "...", "email": "...", "nome": "...", "cognome": "...", "roles": ["admin"], "mfaEnabled": true } }
Se MFA richiesto:
{ "mfaRequired": true, "userId": "..." }

### Refresh
POST /api/auth/refresh
Input:
{ "refreshToken": "..." }
Output:
{ "accessToken": "...", "refreshToken": "..." }

### Userinfo
GET /api/auth/userinfo
Header:
Authorization: Bearer <accessToken>
Output:
{ "user": { "id": "...", "email": "...", "nome": "...", "cognome": "...", "roles": ["admin"], "mfaEnabled": true } }

### MFA verify
POST /api/auth/mfa/verify
Input:
{ "userId": "...", "mfaCode": "123456" }
Output:
{ "success": true, "accessToken": "...", "refreshToken": "..." }

### Logout
POST /api/auth/logout
Input:
{ "refreshToken": "..." }
Output:
{ "success": true }

### Logging
POST /api/auth/log
Input:
{ "userId": "...", "action": "login", "ip": "1.2.3.4", "timestamp": "2024-06-01T12:00:00Z", "details": "Login riuscito" }
Output:
{ "success": true }

## Note
- Tutti i payload sono in JSON
- Errori: { "error": "messaggio" } o { "success": false, "error": "messaggio" }
- Logging e audit automatico su tutte le azioni di autenticazione 